---
source: syn-state-machine/src/common_tokens/implementations.rs
expression: "crate::parse::<Implementation<Infallible,\n        Type<Infallible>>>(::quote::quote! {\n            impl < T > Option < T > { pub fn is_some(& self) -> bool ; }\n        })"
---
Ok(
    (
        Inherent(
            InherentImpl {
                genetic_params: Some(
                    GenericParams(
                        [
                            TypeParam(
                                [],
                                TypeParam {
                                    id: Ident(
                                        T,
                                    ),
                                    bounds: None,
                                    ty: None,
                                },
                            ),
                        ],
                    ),
                ),
                ty: NoBounds(
                    TypePath(
                        TypePath {
                            leading: false,
                            segments: [
                                Generic {
                                    id: Id(
                                        Ident(
                                            Option,
                                        ),
                                    ),
                                    generic_args: GenericArgs(
                                        [
                                            Type(
                                                NoBounds(
                                                    TypePath(
                                                        TypePath {
                                                            leading: false,
                                                            segments: [
                                                                Simple {
                                                                    id: Id(
                                                                        Ident(
                                                                            T,
                                                                        ),
                                                                    ),
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            ],
                        },
                    ),
                ),
                where_clause: None,
                attrs: [],
                items: [
                    Function(
                        [],
                        Some(
                            Pub,
                        ),
                        Function {
                            qualifiers: FunctionQualifiers {
                                const: false,
                                async: false,
                                unsafe: false,
                                extern: None,
                            },
                            ident: Ident(
                                is_some,
                            ),
                            generic_params: None,
                            where_clause: None,
                            self_param: None,
                            args: [
                                (
                                    [],
                                    Type(
                                        NoBounds(
                                            Reference(
                                                ReferenceType {
                                                    is_mut: false,
                                                    inner: TypePath(
                                                        TypePath {
                                                            leading: false,
                                                            segments: [
                                                                Simple {
                                                                    id: Id(
                                                                        Ident(
                                                                            self,
                                                                        ),
                                                                    ),
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ],
                            returns: Some(
                                NoBounds(
                                    TypePath(
                                        TypePath {
                                            leading: false,
                                            segments: [
                                                Simple {
                                                    id: Id(
                                                        Ident(
                                                            bool,
                                                        ),
                                                    ),
                                                },
                                            ],
                                        },
                                    ),
                                ),
                            ),
                            body: None,
                        },
                    ),
                ],
            },
        ),
        0,
    ),
)
