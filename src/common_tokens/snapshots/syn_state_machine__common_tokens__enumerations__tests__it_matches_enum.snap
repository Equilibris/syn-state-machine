---
source: syn-state-machine/src/common_tokens/enumerations.rs
expression: "crate::parse::<Enumeration<Infallible,\n        Ident>>(::quote::quote! {\n            enum HelloWorld < F, T > where F : Into < T >\n            { Unit, From(F), To { result : T }, }\n        })"
---
Ok(
    (
        Enumeration {
            id: Ident(
                HelloWorld,
            ),
            generic_params: Some(
                GenericParams(
                    [
                        TypeParam(
                            [],
                            TypeParam {
                                id: Ident(
                                    F,
                                ),
                                bounds: None,
                                ty: None,
                            },
                        ),
                        TypeParam(
                            [],
                            TypeParam {
                                id: Ident(
                                    T,
                                ),
                                bounds: None,
                                ty: None,
                            },
                        ),
                    ],
                ),
            ),
            where_clause: Some(
                WhereClause(
                    [
                        TypeBoundWhereClauseItem(
                            TypeBoundWhereClauseItem {
                                for: None,
                                ty: Ident(
                                    F,
                                ),
                                bounds: Some(
                                    TypeParamBounds(
                                        [
                                            TraitBound(
                                                TraitBound {
                                                    q: false,
                                                    for: None,
                                                    ty: TypePath {
                                                        leading: false,
                                                        segments: [
                                                            Generic {
                                                                id: Id(
                                                                    Ident(
                                                                        Into,
                                                                    ),
                                                                ),
                                                                generic_args: GenericArgs(
                                                                    [
                                                                        Type(
                                                                            Ident(
                                                                                T,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                    ),
                                ),
                            },
                        ),
                    ],
                ),
            ),
            items: InterlaceTrail(
                [
                    Unit {
                        id: Ident(
                            Unit,
                        ),
                        attrs: [],
                        vis: None,
                        desc: None,
                    },
                    Tuple {
                        id: Ident(
                            From,
                        ),
                        attrs: [],
                        tuple: InterlaceTrail(
                            [
                                TupleField {
                                    attr: [],
                                    vis: None,
                                    ty: Ident(
                                        F,
                                    ),
                                },
                            ],
                            [],
                        ),
                        vis: None,
                        desc: None,
                    },
                    Block {
                        id: Ident(
                            To,
                        ),
                        attrs: [],
                        block: InterlaceTrail(
                            [
                                StructField {
                                    attr: [],
                                    vis: None,
                                    id: Ident(
                                        result,
                                    ),
                                    ty: Ident(
                                        T,
                                    ),
                                },
                            ],
                            [],
                        ),
                        vis: None,
                        desc: None,
                    },
                ],
                [
                    FPunct,
                    FPunct,
                    FPunct,
                ],
            ),
        },
        0,
    ),
)
